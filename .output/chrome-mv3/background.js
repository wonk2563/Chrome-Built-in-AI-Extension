import{i as m}from"./chunks/chrome-DK-H5SZD.js";function f(r){return r==null||typeof r=="function"?{main:r}:r}async function h(r,t,e){try{const a=await chrome.tabs.query({active:!0});if(!a||!a[0]||!a[0].id){e({success:!1,data:null,error:"No active tab found"});return}const n=await chrome.scripting.executeScript({target:{tabId:a[0].id},func:g,args:[r,t]});e(n[0].result)}catch(a){e({success:!1,data:null,error:a})}}async function g(r,t){try{const e=await self.ai.summarizer.capabilities();if(!e||e.available==="no")throw new Error("Summarizer not available");const a=await self.ai.summarizer.create({type:t.type,format:t.format,length:t.length}),n=await a.summarize(r);return a.destroy(),{success:!0,data:n,error:null}}catch(e){return console.log(e),{success:!1,data:null,error:e}}}async function y(r,t,e){try{const a=await chrome.tabs.query({active:!0});if(!a||!a[0]||!a[0].id){e({success:!1,data:null,error:"No active tab found"});return}const n=await chrome.scripting.executeScript({target:{tabId:a[0].id},func:w,args:[r,t]});e(n[0].result)}catch(a){e({success:!1,data:null,error:a})}}async function w(r,t){try{const e=await self.ai.languageModel.capabilities();if(!e||e.available==="no")throw new Error("Language model not available");const a=await self.ai.languageModel.create({systemPrompt:r}),n=await a.prompt(t);return a.destroy(),{success:!0,data:n,error:null}}catch(e){return console.log(e),{success:!1,data:null,error:e}}}async function b(r,t,e){var a,n,o;try{const c=await chrome.tabs.query({active:!0});if(!c||!c[0]||!c[0].id){e({success:!1,data:null,error:"No active tab found"});return}const s=await chrome.scripting.executeScript({target:{tabId:c[0].id},func:l,args:[r]});if(!s||!s[0]||!s[0].result||!((a=s[0].result)!=null&&a.success)){e({success:!1,data:null,error:"Language detection failed"});return}if(((n=s[0].result)==null?void 0:n.data.detectedLanguage)===t){e({success:!0,data:r,error:null});return}const d=await chrome.scripting.executeScript({target:{tabId:c[0].id},func:L,args:[r,(o=s[0].result)==null?void 0:o.data.detectedLanguage,t]});e(d[0].result)}catch(c){e({success:!1,data:null,error:c})}}async function L(r,t,e){try{const a={sourceLanguage:t,targetLanguage:"zh-Hant"},n=await self.translation.canTranslate(a);if(!n||n!=="readily")throw new Error("Translator not available");const o=await self.translation.createTranslator(a),c=await o.translate(r);return o.destroy(),{success:!0,data:c,error:null}}catch(a){return console.log(a),{success:!1,data:null,error:a}}}async function M(r,t){try{const e=await chrome.tabs.query({active:!0});if(!e||!e[0]||!e[0].id){t({success:!1,data:null,error:"No active tab found"});return}const a=await chrome.scripting.executeScript({target:{tabId:e[0].id},func:l,args:[r]});t(a[0].result)}catch(e){t({success:!1,data:null,error:e})}}async function l(r){try{const t=await self.translation.canDetect();if(!t||t!=="readily")throw new Error("LanguageDetector not available");return{success:!0,data:(await(await self.translation.createDetector()).detect(r))[0],error:null}}catch(t){return console.log(t),{success:!1,data:null,error:t}}}async function v(r){try{const t={},e=await chrome.tabs.query(t);r({success:!0,data:e,error:null})}catch(t){console.log(t),r({success:!1,data:null,error:t})}}async function p(r){try{let t={text:""},e=await chrome.history.search(t);r({success:!0,data:e,error:null})}catch(t){console.log(t),r({success:!1,data:null,error:t})}}async function I(r,t){try{chrome.history.getVisits({url:r},e=>{t({success:!0,data:e,error:null})})}catch(e){console.log(e),t({success:!1,data:null,error:e})}}async function E(r,t,e,a){try{fetch(`https://www.googleapis.com/customsearch/v1?key=${r}&cx=${t}&q=${e}`).then(n=>n.json()).then(n=>{a({success:!0,data:n,error:null})})}catch(n){console.log("search error",n),a({success:!1,data:null,error:n})}}async function P(r,t){try{fetch(r).then(e=>e.text()).then(e=>{t({success:!0,data:e,error:null})})}catch(e){console.log("getPageHtml error",e),t({success:!1,data:null,error:e})}}async function A(r,t,e){try{chrome.readingList.addEntry({title:r,url:t,hasBeenRead:!1}),e({success:!0,data:null,error:null})}catch(a){console.log(a),e({success:!1,data:null,error:a})}}async function q(r,t){try{chrome.readingList.removeEntry({url:r}),t({success:!0,data:null,error:null})}catch(e){console.log(e),t({success:!1,data:null,error:e})}}async function T(r,t){try{const e=await chrome.readingList.query(r);t({success:!0,data:e,error:null})}catch(e){console.log(e),t({success:!1,data:null,error:e})}}async function x(r,t){try{chrome.readingList.updateEntry(r),t({success:!0,data:null,error:null})}catch(e){console.log(e),t({success:!1,data:null,error:e})}}async function S(r,t,e){try{const a=await new Promise((n,o)=>{chrome.notifications.create({type:"basic",iconUrl:"icon/32.png",title:r,message:t,requireInteraction:!0,priority:2},c=>{if(chrome.runtime.lastError)return o(chrome.runtime.lastError);n(c)})});e({success:!0,data:a,error:null})}catch(a){console.log(a),e({success:!1,data:null,error:a})}}async function z(r,t,e){try{await new Promise((a,n)=>{chrome.alarms.create(r,t,()=>{if(chrome.runtime.lastError)return n(chrome.runtime.lastError);a()})}),e({success:!0,data:null,error:null})}catch(a){console.log(a),e({success:!1,data:null,error:a})}}async function k(r,t){try{if((await new Promise((n,o)=>{chrome.alarms.getAll(c=>{if(chrome.runtime.lastError)return o(chrome.runtime.lastError);n(c)})})).find(n=>n.name===r)||t({success:!0,data:"Alarm not found",error:null}),!await new Promise(n=>{chrome.alarms.clear(r,o=>{n(o)})}))throw new Error("Alarm not cleared");t({success:!0,data:"Alarm cleared",error:null})}catch(e){console.log(e),t({success:!1,data:null,error:e})}}async function C(r){try{const t=await new Promise((e,a)=>{chrome.alarms.getAll(n=>{if(chrome.runtime.lastError)return a(chrome.runtime.lastError);e(n)})});r({success:!0,data:t,error:null})}catch(t){console.log(t),r({success:!1,data:null,error:t})}}const D=f({type:"module",main(){chrome.sidePanel.setPanelBehavior({openPanelOnActionClick:!0}).catch(r=>console.error(r)),chrome.runtime.onMessage.addListener((r,t)=>{(async()=>r.action==="console"&&console.log(r.data))()}),chrome.runtime.onMessage.addListener((r,t,e)=>{if(r.action==="summary")return h(r.content,r.options,e),!0}),chrome.runtime.onMessage.addListener((r,t,e)=>{if(r.action==="prompt")return y(r.systemPrompt,r.content,e),!0}),chrome.runtime.onMessage.addListener((r,t,e)=>{if(r.action==="translate")return b(r.content,r.targetLanguage,e),!0}),chrome.runtime.onMessage.addListener((r,t,e)=>{if(r.action==="detect")return M(r.content,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="getCurrentTabs")return v(e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="getTabHistory")return p(e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="getVisits")return I(r.url,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="search")return E(r.key,r.cx,r.query,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="getPageHtml")return P(r.url,e),!0}),chrome.runtime.onMessage.addListener(function(r,t){if(r.action==="switchTab")return chrome.tabs.update(r.tabId,{active:!0}),!0}),chrome.runtime.onMessage.addListener(function(r,t){if(r.action==="openTab")return chrome.tabs.create({url:r.url}),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="createNotification")return S(r.title,r.message,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="createAlarm")return z(r.name,r.options,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="getAllAlarm")return C(e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="clearAlarm")return k(r.name,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="addReadLaterItem")return A(r.title,r.url,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="removeReadLaterItem")return q(r.url,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="getReadLaterItems")return T(r.query,e),!0}),chrome.runtime.onMessage.addListener(function(r,t,e){if(r.action==="updateReadLaterItem")return x(r.item,e),!0}),chrome.alarms.onAlarm.addListener(async r=>{if(r.name.startsWith("readLater_")){const t=r.name.split("_")[1],a=(await chrome.readingList.query({url:t}))[0];return chrome.notifications.create({type:"basic",iconUrl:"icon/32.png",title:"Read reminder",message:`${a.title}`,requireInteraction:!0}),!0}})}});function u(r,...t){}const H={debug:(...r)=>u(console.debug,...r),log:(...r)=>u(console.log,...r),warn:(...r)=>u(console.warn,...r),error:(...r)=>u(console.error,...r)};let i;try{m(),i=D.main(),i instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(r){throw H.error("The background crashed on startup!"),r}
